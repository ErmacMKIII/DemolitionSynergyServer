/*
 * Copyright (C) 2024 Alexander Stojanovich <coas91@rocketmail.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
package rs.alexanderstojanovich.evgds.main;

import java.awt.Dimension;
import java.awt.Image;
import java.awt.Toolkit;
import java.awt.event.WindowEvent;
import java.net.URL;
import java.util.ArrayList;
import java.util.List;
import javax.swing.ImageIcon;
import javax.swing.JLabel;
import javax.swing.JProgressBar;
import javax.swing.JTextArea;
import static rs.alexanderstojanovich.evgds.main.Game.RESOURCES_DIR;

/**
 *
 * @author Alexander Stojanovich <coas91@rocketmail.com>
 */
public class Window extends javax.swing.JFrame {
    
    public final GameObject gameObject;
    public static final Dimension DIM = Toolkit.getDefaultToolkit().getScreenSize();
    
    public static final String LOGOX_FILE_NAME = "app-icon.png";
    public static final String LOGO_FILE_NAME = "app-icon-small.png";

    /**
     * Creates new form ServerIntrface
     *
     * @param gameObject game object linking everything
     */
    public Window(GameObject gameObject) {
        this.gameObject = gameObject;
        initComponents();
        this.setIconImages(appLogos());
    }
    
    public void initCenterWindow() {
        this.setLocation(DIM.width / 2 - this.getSize().width / 2, DIM.height / 2 - this.getSize().height / 2);
    }
    
    public void writeOnConsole(String msg) {
        this.console.append(msg + "\r\n");
    }

    /**
     * Init frame logo icon(s).
     *
     * @return list of image(s).
     */
    private static List<Image> appLogos() {
        List<Image> result = new ArrayList<>();
        
        URL url_logo = Window.class.getResource(RESOURCES_DIR + LOGO_FILE_NAME);
        URL url_logox = Window.class.getResource(RESOURCES_DIR + LOGOX_FILE_NAME);
        if (url_logo != null && url_logox != null) {
            ImageIcon logo = new ImageIcon(url_logo);
            ImageIcon logox = new ImageIcon(url_logox);
            
            result.add(logo.getImage());
            result.add(logox.getImage());
        }
        
        return result;
    }
    
    public JTextArea getConsole() {
        return console;
    }
    
    public JLabel getGameTimeText() {
        return gameTimeText;
    }
    
    public JProgressBar getProgBar() {
        return progBar;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panelNetwork = new javax.swing.JPanel();
        lblLocalIP = new javax.swing.JLabel();
        tboxLocalIP = new javax.swing.JTextField();
        lblServerPort = new javax.swing.JLabel();
        spinServerPort = new javax.swing.JSpinner();
        btnStart = new javax.swing.JButton();
        btnStop = new javax.swing.JButton();
        btnRestart = new javax.swing.JButton();
        panelWorld = new javax.swing.JPanel();
        lblLevelSize = new javax.swing.JLabel();
        cmbLevelSize = new javax.swing.JComboBox<>();
        lblWorldName = new javax.swing.JLabel();
        tboxWorldName = new javax.swing.JTextField();
        lblMapSeed = new javax.swing.JLabel();
        spinMapSeed = new javax.swing.JSpinner();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        btnGenerate = new javax.swing.JButton();
        btnImport = new javax.swing.JButton();
        btnExport = new javax.swing.JButton();
        btnErase = new javax.swing.JButton();
        panelInfo = new javax.swing.JPanel();
        spPlayerInfo = new javax.swing.JScrollPane();
        playerInfoTbl = new javax.swing.JTable();
        gameTimeText = new javax.swing.JLabel();
        progBar = new javax.swing.JProgressBar();
        panelConsole = new javax.swing.JPanel();
        spConsole = new javax.swing.JScrollPane();
        console = new javax.swing.JTextArea();
        mainMenu = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Demolition Synergy Server");
        setMinimumSize(new java.awt.Dimension(800, 720));
        setName("windowFrame"); // NOI18N
        setPreferredSize(new java.awt.Dimension(1280, 1024));
        setSize(new java.awt.Dimension(1280, 1024));
        getContentPane().setLayout(new java.awt.GridLayout(2, 2));

        panelNetwork.setBorder(javax.swing.BorderFactory.createTitledBorder("Network"));
        panelNetwork.setLayout(new java.awt.GridLayout(4, 1));

        lblLocalIP.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        lblLocalIP.setText("Local IP:");
        panelNetwork.add(lblLocalIP);
        panelNetwork.add(tboxLocalIP);

        lblServerPort.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        lblServerPort.setText("Server Port:");
        panelNetwork.add(lblServerPort);
        panelNetwork.add(spinServerPort);

        btnStart.setIcon(new javax.swing.ImageIcon(getClass().getResource("/rs/alexanderstojanovich/evgds/resources/play.png"))); // NOI18N
        btnStart.setText("Start");
        btnStart.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnStartActionPerformed(evt);
            }
        });
        panelNetwork.add(btnStart);

        btnStop.setIcon(new javax.swing.ImageIcon(getClass().getResource("/rs/alexanderstojanovich/evgds/resources/stop.png"))); // NOI18N
        btnStop.setText("Stop");
        btnStop.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnStopActionPerformed(evt);
            }
        });
        panelNetwork.add(btnStop);

        btnRestart.setIcon(new javax.swing.ImageIcon(getClass().getResource("/rs/alexanderstojanovich/evgds/resources/restart.png"))); // NOI18N
        btnRestart.setText("Restart");
        btnRestart.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRestartActionPerformed(evt);
            }
        });
        panelNetwork.add(btnRestart);

        getContentPane().add(panelNetwork);

        panelWorld.setBorder(javax.swing.BorderFactory.createTitledBorder("World"));
        panelWorld.setLayout(new java.awt.GridLayout(3, 6));

        lblLevelSize.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        lblLevelSize.setText("Level Size:");
        panelWorld.add(lblLevelSize);
        panelWorld.add(cmbLevelSize);

        lblWorldName.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        lblWorldName.setText("World Name:");
        panelWorld.add(lblWorldName);

        tboxWorldName.setText("My World");
        panelWorld.add(tboxWorldName);

        lblMapSeed.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        lblMapSeed.setText("Seed:");
        panelWorld.add(lblMapSeed);
        panelWorld.add(spinMapSeed);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 157, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 108, Short.MAX_VALUE)
        );

        panelWorld.add(jPanel1);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 157, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 108, Short.MAX_VALUE)
        );

        panelWorld.add(jPanel2);

        btnGenerate.setIcon(new javax.swing.ImageIcon(getClass().getResource("/rs/alexanderstojanovich/evgds/resources/new.png"))); // NOI18N
        btnGenerate.setText("Generate New");
        panelWorld.add(btnGenerate);

        btnImport.setIcon(new javax.swing.ImageIcon(getClass().getResource("/rs/alexanderstojanovich/evgds/resources/import.png"))); // NOI18N
        btnImport.setText("Import World");
        panelWorld.add(btnImport);

        btnExport.setIcon(new javax.swing.ImageIcon(getClass().getResource("/rs/alexanderstojanovich/evgds/resources/export.png"))); // NOI18N
        btnExport.setText("Export World");
        panelWorld.add(btnExport);

        btnErase.setIcon(new javax.swing.ImageIcon(getClass().getResource("/rs/alexanderstojanovich/evgds/resources/trash.png"))); // NOI18N
        btnErase.setText("Erase World");
        panelWorld.add(btnErase);

        getContentPane().add(panelWorld);

        panelInfo.setBorder(javax.swing.BorderFactory.createTitledBorder("Info"));
        panelInfo.setLayout(new java.awt.BorderLayout());

        playerInfoTbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "PlayerId", "PlayerName", "Color", "Texture", "View", "Position"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        playerInfoTbl.setShowGrid(true);
        spPlayerInfo.setViewportView(playerInfoTbl);

        panelInfo.add(spPlayerInfo, java.awt.BorderLayout.CENTER);

        gameTimeText.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        gameTimeText.setIcon(new javax.swing.ImageIcon(getClass().getResource("/rs/alexanderstojanovich/evgds/resources/day-night-cycle.png"))); // NOI18N
        gameTimeText.setText("Day 1 00:00:00");
        gameTimeText.setBorder(javax.swing.BorderFactory.createTitledBorder("Game Time"));
        panelInfo.add(gameTimeText, java.awt.BorderLayout.PAGE_START);

        progBar.setBorder(javax.swing.BorderFactory.createTitledBorder("Progress:"));
        progBar.setStringPainted(true);
        panelInfo.add(progBar, java.awt.BorderLayout.PAGE_END);

        getContentPane().add(panelInfo);

        panelConsole.setBorder(javax.swing.BorderFactory.createTitledBorder("Console"));

        console.setEditable(false);
        console.setColumns(20);
        console.setRows(5);
        spConsole.setViewportView(console);

        javax.swing.GroupLayout panelConsoleLayout = new javax.swing.GroupLayout(panelConsole);
        panelConsole.setLayout(panelConsoleLayout);
        panelConsoleLayout.setHorizontalGroup(
            panelConsoleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelConsoleLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(spConsole, javax.swing.GroupLayout.DEFAULT_SIZE, 624, Short.MAX_VALUE))
        );
        panelConsoleLayout.setVerticalGroup(
            panelConsoleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(spConsole, javax.swing.GroupLayout.DEFAULT_SIZE, 325, Short.MAX_VALUE)
        );

        getContentPane().add(panelConsole);

        jMenu1.setText("File");

        jMenuItem1.setText("Exit");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);

        mainMenu.add(jMenu1);

        jMenu2.setText("Edit");
        mainMenu.add(jMenu2);

        setJMenuBar(mainMenu);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnStartActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnStartActionPerformed
        // TODO add your handling code here:
        gameObject.gameServer.startServer();
    }//GEN-LAST:event_btnStartActionPerformed
    
    private void btnStopActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnStopActionPerformed
        // TODO add your handling code here:        
        gameObject.gameServer.stopServer();
        gameObject.clearEverything();
    }//GEN-LAST:event_btnStopActionPerformed
    
    private void btnRestartActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRestartActionPerformed
        // TODO add your handling code here:
        gameObject.gameServer.stopServer();
        gameObject.clearEverything();
    }//GEN-LAST:event_btnRestartActionPerformed
    
    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        // TODO add your handling code here:
        this.dispatchEvent(new WindowEvent(this, WindowEvent.WINDOW_CLOSING));
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnErase;
    private javax.swing.JButton btnExport;
    private javax.swing.JButton btnGenerate;
    private javax.swing.JButton btnImport;
    private javax.swing.JButton btnRestart;
    private javax.swing.JButton btnStart;
    private javax.swing.JButton btnStop;
    private javax.swing.JComboBox<String> cmbLevelSize;
    private javax.swing.JTextArea console;
    private javax.swing.JLabel gameTimeText;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JLabel lblLevelSize;
    private javax.swing.JLabel lblLocalIP;
    private javax.swing.JLabel lblMapSeed;
    private javax.swing.JLabel lblServerPort;
    private javax.swing.JLabel lblWorldName;
    private javax.swing.JMenuBar mainMenu;
    private javax.swing.JPanel panelConsole;
    private javax.swing.JPanel panelInfo;
    private javax.swing.JPanel panelNetwork;
    private javax.swing.JPanel panelWorld;
    private javax.swing.JTable playerInfoTbl;
    private javax.swing.JProgressBar progBar;
    private javax.swing.JScrollPane spConsole;
    private javax.swing.JScrollPane spPlayerInfo;
    private javax.swing.JSpinner spinMapSeed;
    private javax.swing.JSpinner spinServerPort;
    private javax.swing.JTextField tboxLocalIP;
    private javax.swing.JTextField tboxWorldName;
    // End of variables declaration//GEN-END:variables
}
